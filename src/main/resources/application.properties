spring.application.name=LimitLoginAttempt
spring.datasource.username = postgres
spring.datasource.password = Va@251003
spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://localhost:5432/Spring_Security
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = update
spring.data.jpa.repositories.bootstrap-mode = default
spring.jpa.defer-datasource-initialization = true         
server.port = 8081
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format-sql = true


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ditpimprivaibhav@gmail.com
spring.mail.password=fqfl xtnj yzuq dplk
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.main.allow-circular-references=true
spring.profiles.active=prod


#spring.mail.host=smtp.gmail.com
#This sets the SMTP server to Gmail's SMTP service (smtp.gmail.com). It tells Spring Boot that Gmail will handle the email transmission.
#
#spring.mail.port=587
#The port number 587 is used by Gmail for sending emails using the SMTP protocol with TLS (Transport Layer Security) encryption. It allows secure email transmission.
#
#spring.mail.username=ditpimprivaibhav@gmail.com
#This is the email address that will be used to send the emails. You need to use your Gmail email address here.
#
#spring.mail.password=fqfl xtnj yzuq dplk
#This is the password or app-specific password for the email account (ditpimprivaibhav@gmail.com). Gmail requires using an app-specific password for SMTP if two-factor authentication is enabled.
#
#spring.mail.properties.mail.smtp.auth=true
#This enables SMTP authentication, meaning that the application will authenticate the Gmail username and password before sending the email.
#
#spring.mail.properties.mail.smtp.starttls.enable=true
#This enables the use of TLS (Transport Layer Security), which ensures that the email transmission is encrypted and secure
